/*----- PROTECTED REGION ID(LiberaBrillianceGdxStateMachine.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        LiberaBrillianceGdxStateMachine.cpp
//
// description : State machine file for the LiberaBrillianceGdx class
//
// project :     Libera BPM Event Receiver Device Server
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <LiberaBrillianceGdx.h>

/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::LiberaBrillianceGdxStateMachine.cpp

//================================================================
//  States   |  Description
//================================================================
//  UNKNOWN  |  Device is not [or not properly] initialized
//  FAULT    |  Device initialization failed or unrecoverable error
//  ON       |  BPM is up and running


namespace LiberaBrillianceGdx_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : LiberaBrillianceGdx::is_FOFBInterlockStatus_allowed()
 *	Description : Execution allowed for FOFBInterlockStatus attribute
 */
//--------------------------------------------------------
bool LiberaBrillianceGdx::is_FOFBInterlockStatus_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for FOFBInterlockStatus attribute in read access.
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::FOFBInterlockStatusStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::FOFBInterlockStatusStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaBrillianceGdx::is_GbeOrbitEnable_allowed()
 *	Description : Execution allowed for GbeOrbitEnable attribute
 */
//--------------------------------------------------------
bool LiberaBrillianceGdx::is_GbeOrbitEnable_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for GbeOrbitEnable attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::GbeOrbitEnableStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::GbeOrbitEnableStateAllowed_WRITE

	//	Not any excluded states for GbeOrbitEnable attribute in read access.
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::GbeOrbitEnableStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::GbeOrbitEnableStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaBrillianceGdx::is_FOFBStateMode_allowed()
 *	Description : Execution allowed for FOFBStateMode attribute
 */
//--------------------------------------------------------
bool LiberaBrillianceGdx::is_FOFBStateMode_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for FOFBStateMode attribute in read access.
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::FOFBStateModeStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::FOFBStateModeStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaBrillianceGdx::is_FOFBSwitch_allowed()
 *	Description : Execution allowed for FOFBSwitch attribute
 */
//--------------------------------------------------------
bool LiberaBrillianceGdx::is_FOFBSwitch_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for FOFBSwitch attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::FOFBSwitchStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::FOFBSwitchStateAllowed_WRITE

	//	Not any excluded states for FOFBSwitch attribute in read access.
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::FOFBSwitchStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::FOFBSwitchStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaBrillianceGdx::is_FOFBAxis_allowed()
 *	Description : Execution allowed for FOFBAxis attribute
 */
//--------------------------------------------------------
bool LiberaBrillianceGdx::is_FOFBAxis_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for FOFBAxis attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::FOFBAxisStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::FOFBAxisStateAllowed_WRITE

	//	Not any excluded states for FOFBAxis attribute in read access.
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::FOFBAxisStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::FOFBAxisStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaBrillianceGdx::is_FOFBDimBpms_allowed()
 *	Description : Execution allowed for FOFBDimBpms attribute
 */
//--------------------------------------------------------
bool LiberaBrillianceGdx::is_FOFBDimBpms_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for FOFBDimBpms attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::FOFBDimBpmsStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::FOFBDimBpmsStateAllowed_WRITE

	//	Not any excluded states for FOFBDimBpms attribute in read access.
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::FOFBDimBpmsStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::FOFBDimBpmsStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaBrillianceGdx::is_FOFBDimEigenmodes_allowed()
 *	Description : Execution allowed for FOFBDimEigenmodes attribute
 */
//--------------------------------------------------------
bool LiberaBrillianceGdx::is_FOFBDimEigenmodes_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for FOFBDimEigenmodes attribute in Write access.
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::FOFBDimEigenmodesStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::FOFBDimEigenmodesStateAllowed_WRITE

	//	Not any excluded states for FOFBDimEigenmodes attribute in read access.
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::FOFBDimEigenmodesStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::FOFBDimEigenmodesStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaBrillianceGdx::is_GbeOrbitStatus_allowed()
 *	Description : Execution allowed for GbeOrbitStatus attribute
 */
//--------------------------------------------------------
bool LiberaBrillianceGdx::is_GbeOrbitStatus_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for GbeOrbitStatus attribute in read access.
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::GbeOrbitStatusStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::GbeOrbitStatusStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : LiberaBrillianceGdx::is_GetParameters_allowed()
 *	Description : Execution allowed for GetParameters attribute
 */
//--------------------------------------------------------
bool LiberaBrillianceGdx::is_GetParameters_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::UNKNOWN ||
		get_state()==Tango::FAULT)
	{
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::GetParametersStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::GetParametersStateAllowed
		return false;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaBrillianceGdx::is_ReloadSystemProperties_allowed()
 *	Description : Execution allowed for ReloadSystemProperties attribute
 */
//--------------------------------------------------------
bool LiberaBrillianceGdx::is_ReloadSystemProperties_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::UNKNOWN ||
		get_state()==Tango::FAULT)
	{
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::ReloadSystemPropertiesStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::ReloadSystemPropertiesStateAllowed
		return false;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaBrillianceGdx::is_MagicCommand_allowed()
 *	Description : Execution allowed for MagicCommand attribute
 */
//--------------------------------------------------------
bool LiberaBrillianceGdx::is_MagicCommand_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for MagicCommand command.
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::MagicCommandStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::MagicCommandStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaBrillianceGdx::is_ForceInitSettings_allowed()
 *	Description : Execution allowed for ForceInitSettings attribute
 */
//--------------------------------------------------------
bool LiberaBrillianceGdx::is_ForceInitSettings_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::UNKNOWN ||
		get_state()==Tango::FAULT)
	{
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::ForceInitSettingsStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::ForceInitSettingsStateAllowed
		return false;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaBrillianceGdx::is_SetTraceLevel_allowed()
 *	Description : Execution allowed for SetTraceLevel attribute
 */
//--------------------------------------------------------
bool LiberaBrillianceGdx::is_SetTraceLevel_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::UNKNOWN ||
		get_state()==Tango::FAULT)
	{
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::SetTraceLevelStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::SetTraceLevelStateAllowed
		return false;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LiberaBrillianceGdx::is_ResetStatusInterlock_allowed()
 *	Description : Execution allowed for ResetStatusInterlock attribute
 */
//--------------------------------------------------------
bool LiberaBrillianceGdx::is_ResetStatusInterlock_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for ResetStatusInterlock command.
	/*----- PROTECTED REGION ID(LiberaBrillianceGdx::ResetStatusInterlockStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::ResetStatusInterlockStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(LiberaBrillianceGdx::LiberaBrillianceGdxStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	LiberaBrillianceGdx::LiberaBrillianceGdxStateAllowed.AdditionalMethods

}	//	End of namespace
